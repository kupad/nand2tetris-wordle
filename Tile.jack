/*
We have a tile grid of 8x15:

00  01  02  03  04  05  06  07  08  09  0A  0B  0C  0D
10  11  12  13  14  15  16  17  18  19  1A  1B  1C  1D
20  21  22  23  24  25  26  27  28  29  2A  2B  2C  2D
30  31  32  33  34  35  36  37  38  39  3A  3B  3C  3D
40  41  42  43  44  45  46  47  48  49  4A  4B  4C  4D
40  41  42  43  44  45  46  47  48  49  4A  4B  4C  4D
50  51  52  53  54  55  56  57  58  59  5A  5B  5C  5D
60  61  62  63  64  65  66  67  68  69  6A  6B  6C  6D
70  71  72  73  74  75  76  77  78  79  7A  7B  7C  7D
*/
class Tile {


  function void drawGrid() {
    var int r, c;

    let r = 0; 
    let c = 0;
    while(r < 8) {
       while(c < 15) {
          do Tile.drawOutlinedLetter(88, r, c);
          let c = c + 1;
       }
       let r = r + 1;
       let c = 0;
    }
    return;
  }
  
  function int to_x(int col) {
    return (col*32) + 8;
  }
  
  function int to_y(int row) {
    return row*32;
  }

  function int to_memloc(int row, int col) {
    return (row*1024+256) + (2*col+1);
  }
  
  function void drawLetter(char c, int row, int col) {
    do Letter.drawBlack(c, Tile.to_memloc(row, col)); 
    return;
  }

  function void drawSolidLetter(char c, int row, int col) {
    var int memloc, x, y;

    //col/row -> pixels
    let x = (col*32) + 8;
    let y = row * 32;
    do Screen.setColor(true);
    do Screen.drawRectangle(x, y+1, x+30, y+31);
    let memloc = ((y+8) * 32) + (2*col+1);
    do Letter.drawWhite(c, memloc); 

    return;
  }

  function void drawOutlinedLetter(char c, int row, int col) {
    var int memloc, x, y;

    //col/row -> pixels
    let x = (col*32) + 8;
    let y = row * 32;
    do Screen.drawLine(x, y+1, x+30, y+1); //top line
    do Screen.drawLine(x, y+1, x, y+31); //left line
    do Screen.drawLine(x+30, y+1, x+30, y+31); //right line
    do Screen.drawLine(x, y+31, x+30, y+31); //bottom line
    
    let memloc = ((y+8) * 32) + (2*col+1);
    do Letter.drawBlack(c, memloc); 

    return;
  }
  
  function void drawGrayLetter(char c, int row, int col) {
    var int memloc, x, y;

    //col/row -> pixels
    let x = (col*32) + 8;
    let y = row * 32;
    do Screen.drawLine(x, y+1, x+30, y+1); //top line
    do Screen.drawLine(x, y+3, x+30, y+3); 
    do Screen.drawLine(x, y+5, x+30, y+5); 
    do Screen.drawLine(x, y+7, x+30, y+7); 
    do Screen.drawLine(x, y+9, x+30, y+9); 
    do Screen.drawLine(x, y+11, x+30, y+11); 
    do Screen.drawLine(x, y+13, x+30, y+13); 
    do Screen.drawLine(x, y+15, x+30, y+15); 
    do Screen.drawLine(x, y+17, x+30, y+17); 
    do Screen.drawLine(x, y+19, x+30, y+19); 
    do Screen.drawLine(x, y+21, x+30, y+21); 
    do Screen.drawLine(x, y+23, x+30, y+23); 
    do Screen.drawLine(x, y+25, x+30, y+25); 
    do Screen.drawLine(x, y+27, x+30, y+27); 
    do Screen.drawLine(x, y+29, x+30, y+29); 
    do Screen.drawLine(x, y+31, x+30, y+31); //bottom line
    do Screen.drawLine(x, y+1, x, y+31); //left line
    do Screen.drawLine(x+30, y+1, x+30, y+31); //right line
    
    let memloc = ((y+8) * 32) + (2*col+1);
    do Letter.drawBlack(c, memloc); 

    return;
  }

  //TODO: can be made faster
  function void drawDottedTile(int row, int col) {
	var int i, x, y, memAddress, location;
    
    let x = (col*32) + 8;
    let y = row * 32;
    do Screen.setColor(true);
    
    //top
    let i = 0;
    while(i < 31) {
        do Screen.drawPixel(x+i, y+1);
        let i = i+2;
    }
   
    //left 
    let i = 0;
    while(i < 32) {
        do Screen.drawPixel(x, y+i+1);
        let i = i+2;
    }
    
    //right
    let i = 0;
    while(i < 31) {
        do Screen.drawPixel(x+30, y+i+1);
        let i = i+2;
    }
    
    //bottom
    let i = 0;
    while(i < 31) {
        do Screen.drawPixel(x+i, y+31);
        let i = i+2;
    }

	return;
  }

  /** Empties out a tile. */
  function void drawEmpty(int row, int col) {
    var int x, y;
    //col/row -> pixels
    let x = (col*32) + 8;
    let y = row * 32;
    do Screen.setColor(false);
    do Screen.drawRectangle(x, y+1, x+30, y+31);
    return;
  }

  function void drawGray(int x, int y) {
    do Screen.setColor(true);
    do Screen.drawLine(x+1, y+1, x+31, y+1); //top line
    do Screen.drawLine(x+1, y+3, x+31, y+3); 
    do Screen.drawLine(x+1, y+5, x+31, y+5); 
    do Screen.drawLine(x+1, y+7, x+31, y+7); 
    do Screen.drawLine(x+1, y+9, x+31, y+9); 
    do Screen.drawLine(x+1, y+11, x+31, y+11); 
    do Screen.drawLine(x+1, y+13, x+31, y+13); 
    do Screen.drawLine(x+1, y+15, x+31, y+15); 
    do Screen.drawLine(x+1, y+17, x+31, y+17); 
    do Screen.drawLine(x+1, y+19, x+31, y+19); 
    do Screen.drawLine(x+1, y+21, x+31, y+21); 
    do Screen.drawLine(x+1, y+23, x+31, y+23); 
    do Screen.drawLine(x+1, y+25, x+31, y+25); 
    do Screen.drawLine(x+1, y+27, x+31, y+27); 
    do Screen.drawLine(x+1, y+29, x+31, y+29); 
    do Screen.drawLine(x+1, y+31, x+31, y+31); //bottom line
    do Screen.drawLine(x+1, y+1, x+1, y+31); //left line
    do Screen.drawLine(x+31, y+1, x+31, y+31); //right line
    return;
  }
}

