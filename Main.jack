class Main {
  static String secret;
  static RandNumGen RNG;
  static int GUESS_WRONG, GUESS_EXACT, GUESS_IN_WORD;

  function void main() {
    var int seed;

    //initialize statics
    let GUESS_WRONG = 0;
    let GUESS_EXACT = 1;
    let GUESS_IN_WORD = 2;
    do Dictionary.init();
    do Letter.init();

    let seed = RandNumGen.genseed();
    let RNG = RandNumGen.new(seed);

    do Main.game();

    return;
  }

  function void game() {
    var String guess;
    var int round, n, j, k;
    var boolean won;

    let n = RNG.rand();
    let secret = Dictionary.word(Util.mod(n, Dictionary.size()));

    //let secret = "STUFF";
    //do Main.printSecret(secret); //for debugging

    do Main.drawPlaceholders();

    let round = 0;
    while(~won & (round < 6)) {
        let guess = Main.readWord(round + 1);
        let won = Main.checkGuess(round + 1, guess);
        let round = round + 1;
    }

    if(won) {
        do Output.moveCursor(1, 27);
        do Output.printString("You Won!");
    } else {
        do Output.moveCursor(1, 28);
        do Output.printString(secret);
    }

    return;
  }

  function void drawPlaceholders() {
    var int i, j;
    let i = 0;
    while (i < 6) {
      let j = 0;
      while (j < 5) {
        do Tile.drawDottedTile(i + 1, (j + 5));
        let j = j + 1;
      }
      let i = i + 1;
    }
    return;
  }

  function void printSecret(String secret) {
    do Output.moveCursor(22,0);
    do Output.printString(secret);
    do Output.moveCursor(0,0);
    return;
  }


  function String readWord(int row) {
    var int col;
    var char c;
    var String word;
    let word = String.new(5);

    let col = 0;
    while (true) {
      let c = 0; // c is invalid at the start.
      while (~Util.isValidKey(c)) {
        let c = Keyboard.readChar();
        do Output.moveCursor(0, 0);
      }
      if (Util.isLetter(c) & (col < 5)) { // is letter and word is not complete
        do word.appendChar(c);
        do Tile.drawLetter(c, row, 5+col);
        let col = col + 1;
      } else{if ((c = 128) & (col = 5)) { // enter and word is complete
        return word;
      } else{if ((c = 129) & (col > 0)) { // backspace and word is not empty
        do word.eraseLastChar();
        do Tile.drawEmpty(row, 4+col);
        do Tile.drawDottedTile(row, 4+col);
        let col = col - 1;
      }}}
    }
    return word; // unreachable
  }

  //returns true if correct guess
  //sideeffect: draw to screen
  function boolean checkGuess(int row, String guess) {
    var int i, k, result, c;
    var boolean isexact;
    var Array outstanding;
   
    //initialize outstanding to 0s
    let outstanding = Array.new(27);
    let i = 0;
    while(i < 27) {
        let outstanding[i] = 0;
        let i = i + 1;
    }

    //count letters in secret
    let i = 0;
    while(i < 5) {
        let k = secret.charAt(i)-65;
        let outstanding[k] = outstanding[k] + 1;
        let i = i + 1;
    }

    let isexact = true;
   
    //check for exacts
    let i = 0;
    while (i < 5) {
        let result = Main.checkChar(i, guess, outstanding);
        if(result = GUESS_EXACT) {
          let c = guess.charAt(i);
          do Tile.drawSolidLetter(c, row, 5+i);
          let k = c - 65;
          let outstanding[k] = outstanding[k] - 1;
        } else {
          let isexact = false;
        }
        let i = i + 1;
    }

    //if(isexact) {
    //    return true;
    //}

    //check the rest
    let i = 0;
    while (i < 5) {
        let result = Main.checkChar(i, guess, outstanding);
        if (result = GUESS_IN_WORD) {
          do Tile.drawGrayLetter(guess.charAt(i), row, 5+i);
        } else{if(result = GUESS_WRONG) {
          do Tile.drawOutlinedLetter(guess.charAt(i), row, 5+i);
        }}
        let i = i + 1;
    }

    do outstanding.dispose();

    return isexact;
  }

  function int checkChar(int i, String guess, Array outstanding) {
    var char c;
    var int j;

    let c = guess.charAt(i);
    if (c = secret.charAt(i)) {
      return GUESS_EXACT;
    }

    if(~(outstanding[c-65] = 0)) {
        let j = 0;
        while (j < 5) {
          if (c = secret.charAt(j)) {
            return GUESS_IN_WORD;
          }
          let j = j + 1;
        }
    }

    return GUESS_WRONG;
  }
}
